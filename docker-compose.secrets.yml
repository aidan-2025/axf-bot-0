# Docker Compose with Secrets Management
# This file demonstrates how to use Docker secrets for production

version: '3.8'

services:
  app1:
    build:
      context: ./app1
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/axf_bot_db
      - REDIS_URL=redis://redis:6379/0
      - INFLUXDB_URL=http://influxdb:8086
      - SECRET_KEY_FILE=/run/secrets/secret_key
      - FANO_API_KEY_FILE=/run/secrets/fano_api_key
      - NEWS_API_KEY_FILE=/run/secrets/news_api_key
    secrets:
      - secret_key
      - fano_api_key
      - news_api_key
    depends_on:
      - postgres
      - redis
      - influxdb
    networks:
      - axf-bot-network

  app2:
    build:
      context: ./app2
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/axf_bot_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY_FILE=/run/secrets/secret_key
    secrets:
      - secret_key
    depends_on:
      - postgres
      - redis
    networks:
      - axf-bot-network

  web-ui:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    networks:
      - axf-bot-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=axf_bot_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - axf-bot-network

  redis:
    image: redis:7-alpine
    command: redis-server --requirepass ${REDIS_PASSWORD}
    secrets:
      - redis_password
    volumes:
      - redis_data:/data
    networks:
      - axf-bot-network

  influxdb:
    image: influxdb:2.7-alpine
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD_FILE=/run/secrets/influxdb_password
      - DOCKER_INFLUXDB_INIT_ORG=axf-bot
      - DOCKER_INFLUXDB_INIT_BUCKET=trading-data
    secrets:
      - influxdb_password
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - axf-bot-network

secrets:
  secret_key:
    file: ./secrets/secret_key.txt
  db_password:
    file: ./secrets/db_password.txt
  redis_password:
    file: ./secrets/redis_password.txt
  influxdb_password:
    file: ./secrets/influxdb_password.txt
  fano_api_key:
    file: ./secrets/fano_api_key.txt
  news_api_key:
    file: ./secrets/news_api_key.txt

volumes:
  postgres_data:
  redis_data:
  influxdb_data:

networks:
  axf-bot-network:
    driver: bridge
