version: '3.8'

services:
  # Application 1: Strategy Generator
  app1:
    build:
      context: ./app1
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/axf_bot_db
      - REDIS_URL=redis://redis:6379/0
      - INFLUXDB_URL=http://influxdb:8086
    depends_on:
      - postgres
      - redis
      - influxdb
    volumes:
      - ./app1/data:/app/data
      - ./app1/models:/app/models
      - ./app1/logs:/app/logs
    networks:
      - axf-bot-network

  # Application 2: MT4 EA Generator
  app2:
    build:
      context: ./app2
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/axf_bot_db
    depends_on:
      - postgres
    volumes:
      - ./app2/generated:/app/generated
      - ./app2/backtesting:/app/backtesting
      - ./app2/logs:/app/logs
    networks:
      - axf-bot-network

  # Web UI
  web-ui:
    build:
      context: ./web-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_APP1_API_URL=http://app1:8000
      - NEXT_PUBLIC_APP2_API_URL=http://app2:8001
    depends_on:
      - app1
      - app2
    networks:
      - axf-bot-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=axf_bot_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - axf-bot-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - axf-bot-network

  # InfluxDB for Time Series Data
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password
      - DOCKER_INFLUXDB_INIT_ORG=axf-bot
      - DOCKER_INFLUXDB_INIT_BUCKET=forex_data
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - axf-bot-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - axf-bot-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployment/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./deployment/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - axf-bot-network

volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  prometheus_data:
  grafana_data:

networks:
  axf-bot-network:
    driver: bridge
